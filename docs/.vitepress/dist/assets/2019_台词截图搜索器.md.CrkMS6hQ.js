import{_ as e,c as t,a0 as r,o}from"./chunks/framework.CsJcTknV.js";const _=JSON.parse('{"title":"台词截图搜索器","description":"","frontmatter":{"title":"台词截图搜索器","date":"2019-06-28T17:16:06.000Z","tags":["妄想"],"categories":"想法"},"headers":[],"relativePath":"2019/台词截图搜索器.md","filePath":"2019/台词截图搜索器.md"}'),i={name:"2019/台词截图搜索器.md"};function n(s,a,l,d,c,h){return o(),t("div",null,a[0]||(a[0]=[r('<h4 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h4><p>感觉这是一个靠谱的想法，但是需要大量的数据在背后支撑。而这些数据我觉得没有什么其他比较好的办法的话，只能自动手动录入了。基本上这个工具可以用一句话来说话，就是输入内容然后搜索出你输入内容的台词截图，当然啦，有可能是没有这句截图的。就是那么简单</p><h4 id="搜索类型" tabindex="-1">搜索类型 <a class="header-anchor" href="#搜索类型" aria-label="Permalink to &quot;搜索类型&quot;">​</a></h4><p>我认为搜索的方式分为三种：（1）第一种就是直接了当的内容搜索，例如：我输入，我爱你。就直接出现这句话的台词截图。（2）第二种就是选择类型来搜索，例如选择悲伤的，快乐的，这些简单的类型然后出现对应的台词截图。（3）第三种就是结合前面两种类型能够精确的搜索。</p><h4 id="信息整合" tabindex="-1">信息整合 <a class="header-anchor" href="#信息整合" aria-label="Permalink to &quot;信息整合&quot;">​</a></h4><p>还是和前段时间说到的比较重要的地方就是，信息整合。要获取一张截图的台词内容，以及类型。这些其实可以用ai来做，但是我不会啊。如果这些可以用抓包来做的就好了，但是也不行。可能唯一的办法就是手动录入数据，但是这是一个漫长的过程。除非做成开放的方式，能让所有的网友自觉帮忙录入吧。</p>',6)]))}const m=e(i,[["render",n]]);export{_ as __pageData,m as default};
